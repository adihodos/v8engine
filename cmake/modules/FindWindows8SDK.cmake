# WIN8SDK_INCLUDE_DIR - where to find Windows.h
# WIN8SDK_INCLUDE_DIR_SHARED - where to find shared includes
# WIN8SDK_FOUND - True if Windows SDK found.
# WIN8SDK_LIBDIR
# WIN8SDK_LIBDIR_FULL

IF(WIN8SDK_INCLUDE_DIR)
# Already in cache, be silent
SET(WIN8SDK_FIND_QUIETLY TRUE)
ENDIF(WIN8SDK_INCLUDE_DIR)

GET_FILENAME_COMPONENT(WIN8SDK_DIR "[HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Microsoft SDKs\\Windows\\v7.1;InstallationFolder]" ABSOLUTE CACHE)
GET_FILENAME_COMPONENT(WINSDK8_VERSION "[HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Microsoft SDKs\\Windows\\v7.1;ProductVersion]" NAME)

IF(WIN8SDK_DIR)
IF(NOT WIN8SDK_FIND_QUIETLY)
MESSAGE(STATUS "Found Windows SDK ${WINSDK8_VERSION} in ${WIN8SDK_DIR}")
ENDIF(NOT WIN8SDK_FIND_QUIETLY)
ENDIF(WIN8SDK_DIR)

FIND_PATH(WIN8SDK_INCLUDE_DIR Windows.h
PATHS
${WIN8SDK_DIR}/Include/um
)

FIND_PATH(WIN8SDK_INCLUDE_DIR_SHARED Windowsx.h
PATHS
${WIN8SDK_DIR}/Include/shared    
)

SET(WIN8SDK_LIBDIR "${WIN8SDK_DIR}/Lib/win8/um")

if (CMAKE_CL_64)
    set(WIN8SDK_LIBPATH_SUFFIX "X64")
else(CMAKE_CL_64)
    set(WIN8SDK_LIBPATH_SUFFIX "X86")
endif(CMAKE_CL_64)

SET(WIN8SDK_LIBDIR_FULL "${WIN8SDK_LIBDIR}/${WIN8SDK_LIBPATH_SUFFIX}")

find_library(D3D11_D3D11LIB NAMES d3d11 PATHS ${WIN8SDK_LIBDIR} PATH_SUFFIXES ${WIN8SDK_LIBPATH_SUFFIX})
find_library(D3D11_D3DCOMPILER NAMES d3dcompiler PATHS ${WIN8SDK_LIBDIR} PATH_SUFFIXES ${WIN8SDK_LIBPATH_SUFFIX})
find_library(D3D11_DXGI NAMES dxgi PATHS ${WIN8SDK_LIBDIR} PATH_SUFFIXES ${WIN8SDK_LIBPATH_SUFFIX})
find_library(D3D11_DXGUID NAMES dxguid PATHS ${WIN8SDK_LIBDIR} PATH_SUFFIXES ${WIN8SDK_LIBPATH_SUFFIX})

set(DirectX_D3D11_LIBRARIES ${D3D11_D3D11LIB} ${D3D11_D3DCOMPILER} ${D3D11_DXGI} ${D3D11_DXGUID})

IF(WIN8SDK_INCLUDE_DIR)
SET(WINSDK_FOUND TRUE)
ELSE(WIN8SDK_INCLUDE_DIR)
IF(NOT WIN8SDK_FIND_QUIETLY)
MESSAGE(STATUS "Warning: Unable to find Windows SDK!")
ENDIF(NOT WIN8SDK_FIND_QUIETLY)
ENDIF(WIN8SDK_INCLUDE_DIR)